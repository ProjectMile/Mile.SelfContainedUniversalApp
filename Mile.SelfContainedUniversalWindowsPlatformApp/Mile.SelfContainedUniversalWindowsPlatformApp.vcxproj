<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\Mile.Cpp\Mile.Project\Mile.Project.Platform.Win32.props" />
  <Import Project="..\Mile.Cpp\Mile.Project\Mile.Project.Platform.x64.props" />
  <Import Project="..\Mile.Cpp\Mile.Project\Mile.Project.Platform.ARM64.props" />
  <PropertyGroup Label="Globals">
    <ProjectGuid>{1c42ca3b-23a8-4105-aaab-42e4c4a12f16}</ProjectGuid>
    <ProjectName>Mile.SelfContainedUniversalWindowsPlatformApp</ProjectName>
    <RootNamespace>MileSelfContainedUniversalWindowsPlatformApp</RootNamespace>
    <MileProjectType>WindowsApplication</MileProjectType>
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <CppWinRTGenerateWindowsMetadata>true</CppWinRTGenerateWindowsMetadata>
    <MinimalCoreWin>true</MinimalCoreWin>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>15.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision>10.0</ApplicationTypeRevision>
    <WindowsTargetPlatformMinVersion>10.0.17763.0</WindowsTargetPlatformMinVersion>
    <CppWinRTImplicitlyExpandTargetPlatform>true</CppWinRTImplicitlyExpandTargetPlatform>
  </PropertyGroup>
  <PropertyGroup Label="Globals">
    <!-- Disable Microsoft.VCLibs reference -->
    <UseCrtSDKReference>false</UseCrtSDKReference>
    <!-- https://github.com/microsoft/terminal/blob/9dc922fc37a479dd560675ac4ea1ce3713ae0ada/src/cppwinrt.build.pre.props#L40 -->
    <_VC_Target_Library_Platform>Desktop</_VC_Target_Library_Platform>
    <!-- Enable VC-LTL Clean Import Mode -->
    <CleanImport>true</CleanImport>
  </PropertyGroup>
  <Import Project="..\Mile.Cpp\Mile.Project\Mile.Project.props" />
  <Import Project="..\Mile.Cpp\Mile.Project\Mile.Project.Library.CppWinRT.props" />
  <Import Project="..\Mile.Cpp\Mile.Project\Mile.Project.Runtime.VC-LTL.props" />
  <ImportGroup Label="PropertySheets">
    <Import Project="PropertySheet.props" />
  </ImportGroup>
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <!--Temporarily disable cppwinrt heap enforcement to work around xaml compiler generated std::shared_ptr use -->
      <AdditionalOptions Condition="'$(CppWinRTHeapEnforcement)'==''">/DWINRT_NO_MAKE_DETECTION %(AdditionalOptions)</AdditionalOptions>
      <PreprocessorDefinitions>WIN32_LEAN_AND_MEAN;WINRT_LEAN_AND_MEAN;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
      <AdditionalDependencies>kernel32.lib;ole32.lib;oleaut32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="pch.h" />
    <ClInclude Include="App.h">
      <DependentUpon>App.xaml</DependentUpon>
    </ClInclude>
    <ClInclude Include="MainPage.h">
      <DependentUpon>MainPage.xaml</DependentUpon>
    </ClInclude>
  </ItemGroup>
  <ItemGroup>
    <ApplicationDefinition Include="App.xaml">
      <SubType>Designer</SubType>
    </ApplicationDefinition>
    <Page Include="MainPage.xaml">
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include="Package.appxmanifest">
      <SubType>Designer</SubType>
    </AppxManifest>
  </ItemGroup>
  <ItemGroup>
    <Image Include="Assets\LockScreenLogo.scale-200.png" />
    <Image Include="Assets\SplashScreen.scale-200.png" />
    <Image Include="Assets\Square150x150Logo.scale-200.png" />
    <Image Include="Assets\Square44x44Logo.scale-200.png" />
    <Image Include="Assets\Square44x44Logo.targetsize-24_altform-unplated.png" />
    <Image Include="Assets\StoreLogo.png" />
    <Image Include="Assets\Wide310x150Logo.scale-200.png" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="pch.cpp">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="App.cpp">
      <DependentUpon>App.xaml</DependentUpon>
    </ClCompile>
    <ClCompile Include="MainPage.cpp">
      <DependentUpon>MainPage.xaml</DependentUpon>
    </ClCompile>
    <ClCompile Include="$(GeneratedFilesDir)module.g.cpp" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include="App.idl">
      <DependentUpon>App.xaml</DependentUpon>
    </Midl>
    <Midl Include="MainPage.idl">
      <DependentUpon>MainPage.xaml</DependentUpon>
    </Midl>
  </ItemGroup>
  <ItemGroup>
    <None Include="PropertySheet.props" />
    <Text Include="readme.txt">
      <DeploymentContent>false</DeploymentContent>
    </Text>
  </ItemGroup>
  <Import Project="..\Mile.Cpp\Mile.Project\Mile.Project.targets" />
  <!-- ## BEGIN HACK - Put all output files to the AppX root folder ## -->
  <!--
    Reference: https://github.com/microsoft/terminal
               /blob/a89c3e2f8527a51b39768980627ed8f7c1ea5f0b
               /src/cascadia/CascadiaPackage/CascadiaPackage.wapproj#L73
  -->
  <!-- 
    For our builds, we want to put all output files to the AppX root folder for
    simplifying the implementation.
  -->
  <Target Name="NanaZipStompSourceProjectForWapProject" BeforeTargets="_ConvertItems">
    <ItemGroup>
      <!--
        Stomp all "SourceProject" values for all incoming dependencies to 
        flatten the package. 
      -->
      <_TemporaryFilteredWapProjOutput Include="@(_FilteredNonWapProjProjectOutput)" />
      <_FilteredNonWapProjProjectOutput Remove="@(_TemporaryFilteredWapProjOutput)" />
      <_FilteredNonWapProjProjectOutput Include="@(_TemporaryFilteredWapProjOutput)">
        <!--
        Blank the SourceProject here to vend all files into the root of the
        package.
      -->
        <SourceProject>
        </SourceProject>
      </_FilteredNonWapProjProjectOutput>
    </ItemGroup>
  </Target>
  <!-- ## END HACK - Put all output files to the AppX root folder ## -->
  <!-- ## BEGIN HACK - Removing Microsoft.VCLibs Packages ## -->
  <!--
    Reference: https://github.com/MicrosoftDocs/windows-uwp
               /blob/13ba8b2bcc82ae92dafdbbdfa21d4ac1ae713f09/hub/apps
               /windows-app-sdk/preview-channel.md#self-contained-deployment
  -->
  <!-- 
    For our builds, we're just using VC-LTL to compile the project and delete
    the package dependencies. We don't want to rely on the Microsoft.VCLibs 
    packages. Because it's very difficult for users who do not have access to 
    the store to get our dependency packages, and we want to be robust and 
    deployable everywhere.
  -->
  <!--
    This target removes the FrameworkSdkPackages from before the manifest 
    generation happens. 
  -->
  <PropertyGroup>
    <IncludeGetResolvedSDKReferences>true</IncludeGetResolvedSDKReferences>
  </PropertyGroup>
  <Target Name="_RemoveFrameworkReferences" BeforeTargets="_ConvertItems;_CalculateInputsForGenerateCurrentProjectAppxManifest">
    <ItemGroup>
      <FrameworkSdkReference Remove="@(FrameworkSdkReference)" />
    </ItemGroup>
  </Target>
  <!-- ## END HACK - Removing Microsoft.VCLibs Packages ## -->
</Project>
